stages:
  - build #сборка
  - test #test
  - notify #уведомление
  
build-frontend-code-job: #задача с именем build-frontend-code-job
  stage: build   #этап build
  only:
    changes:
    - frontend/* #только для изменений в директории frontend

  script: # объявление скрипта
    - cd frontend
    - npm install # загрузка всех сторонних зависимостей
    - npm run build # запуск сборки кода
    - echo "PREV_JOB_ID=${CI_JOB_ID}" >> ${CI_PROJECT_DIR}/build.env #доавил тут ci_project_dir
  artifacts:
    paths:
      - frontend/dist/frontend #сохранение собранного frontend как артефакта 
    reports:
      dotenv: ${CI_PROJECT_DIR}/build.env #добавил тут переменную CI_PROJECT_DIR, так как на пердыдущем шаге записал переменную в директорию CI_PROJECT_DIR

sonarqube-frontend-sast:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest #образ
  script: 
    - cd frontend
    - "sonar-scanner
    -Dsonar.projectName=${SONAR_PROJECT_NAME_FRONTEND} 
    -Dsonar.host.url=${SONAR_HOST_URL_FRONTEND} 
    -Dsonar.login=${SONAR_LOGIN_FRONTEND}
    -Dsonar.projectKey=${SONAR_PROJECT_KEY_FRONTEND}
    -Dsonar.sources=${SONAR_SOURCES_FRONTEND}"
#    -Dsonar.qualitygate.wait=true" #ошибочно добавил
  needs:
    - build-frontend-code-job # прописываем зависимость от джоба с именем build-frontend-code-job




telegram-notification-frontend: #задача с именем telegram-notification-frontend
  variables:
      TEXT: "Андрей Николаев собрал frontend ${CI_PROJECT_URL}/-/jobs/$PREV_JOB_ID/artifacts/download" #обьявление перменных, где ci_project_url - урл проекта, prev_job_id - переменная, обявленная в джобе build-backend-code-job и сохраненная в {CI_PROJECT_DIR}/build.env
      TLGRM: "https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage"
  stage: notify #этап уведомлений
  only:
    changes:
    - frontend/* #только для изменений в директории frontend
    variables:
    - $CI_COMMIT_MESSAGE =~ /send notification/ # только для изменений содержащих в сообщении коммита "send notification"
  script:
  #  - echo "The PREV_JOB_ID is ${PREV_JOB_ID}"  проверки, при помощи которых я определял, что записано в переменную prev_job_id
    - 'curl -X POST -H "Content-type: application/json" --data "{\"chat_id\": \"-1002134018008\", \"text\": \"${TEXT}\" }" ${TLGRM}' #отправка курлом сообщения методом post
  needs:
    - build-frontend-code-job # прописываем зависимость от джоба с именем build-frontend-code-job

